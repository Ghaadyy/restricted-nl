<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classASTVisitor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ASTVisitor</compoundname>
    <derivedcompoundref refid="classJsonASTVisitor" prot="public" virt="non-virtual">JsonASTVisitor</derivedcompoundref>
    <derivedcompoundref refid="classSeleniumASTVisitor" prot="public" virt="non-virtual">SeleniumASTVisitor</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classASTVisitor_1a44752149fa1a44dff1fc313948b2ee98" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const VisitNode &amp;node)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1ac84c0fec090863ebbd73a51728a1fd4f">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a6df7863a4d41171e2251bcca915447dc">visit</reimplementedby>
        <param>
          <type>const <ref refid="classVisitNode" kindref="compound">VisitNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="84" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classASTVisitor_1a4678beb531d981819910135b8858a53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const ClickNode &amp;node)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1a9f7de26ac49c9dec7b34e19f3252ab62">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a3394fef6efe203723ad0f99af24ba2e4">visit</reimplementedby>
        <param>
          <type>const <ref refid="classClickNode" kindref="compound">ClickNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="85" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classASTVisitor_1aeccf96f0ab398a61232dc446cc531904" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const TypeNode &amp;node)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1a5bf2f6eff01bd155548cd10b3ff52d73">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a2f9881425630c56df561b5c83a360762">visit</reimplementedby>
        <param>
          <type>const <ref refid="classTypeNode" kindref="compound">TypeNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="86" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classASTVisitor_1a47627f9820fb4988190dc1a82bd01a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const CheckNode &amp;node)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1a71e57288a7731b2c448b9617c9526304">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a7d4af98b0a9d8fdb34c2cf74622ec3c6">visit</reimplementedby>
        <param>
          <type>const <ref refid="classCheckNode" kindref="compound">CheckNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="87" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classASTVisitor_1adc2d6fe7bad666275db5ecfdaeb5cadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const TestNode &amp;node)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1a2b62aa37bcbd31d7c9b9dad50d8465ab">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a38253ea801602b7b65dc694f9e1d2924">visit</reimplementedby>
        <param>
          <type>const <ref refid="classTestNode" kindref="compound">TestNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="88" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classASTVisitor_1a2471f6e7e3c790f92af037d51fa2accb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>string</type>
        <definition>virtual string ASTVisitor::visit</definition>
        <argsstring>(const AST &amp;tree)=0</argsstring>
        <name>visit</name>
        <qualifiedname>ASTVisitor::visit</qualifiedname>
        <reimplementedby refid="classJsonASTVisitor_1a3450c4211f0e8b94bb6c49fa71c17009">visit</reimplementedby>
        <reimplementedby refid="classSeleniumASTVisitor_1a91a46f424869bb88ad1bf327e6101636">visit</reimplementedby>
        <param>
          <type>const <ref refid="classAST" kindref="compound">AST</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/AST.h" line="89" column="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ASTVisitor</label>
        <link refid="classASTVisitor"/>
      </node>
      <node id="2">
        <label>JsonASTVisitor</label>
        <link refid="classJsonASTVisitor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SeleniumASTVisitor</label>
        <link refid="classSeleniumASTVisitor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/ast/AST.h" line="82" column="1" bodyfile="src/ast/AST.h" bodystart="82" bodyend="90"/>
    <listofallmembers>
      <member refid="classASTVisitor_1a44752149fa1a44dff1fc313948b2ee98" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
      <member refid="classASTVisitor_1a4678beb531d981819910135b8858a53e" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
      <member refid="classASTVisitor_1aeccf96f0ab398a61232dc446cc531904" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
      <member refid="classASTVisitor_1a47627f9820fb4988190dc1a82bd01a97" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
      <member refid="classASTVisitor_1adc2d6fe7bad666275db5ecfdaeb5cadb" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
      <member refid="classASTVisitor_1a2471f6e7e3c790f92af037d51fa2accb" prot="public" virt="pure-virtual"><scope>ASTVisitor</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
