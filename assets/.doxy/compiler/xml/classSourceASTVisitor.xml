<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classSourceASTVisitor" kind="class" language="C++" prot="public">
    <compoundname>SourceASTVisitor</compoundname>
    <basecompoundref refid="classASTVisitor" prot="public" virt="non-virtual">ASTVisitor</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classSourceASTVisitor_1aff40d6bbbc9e7b44b927e031f94a1a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const VisitNode &amp;node) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1a44752149fa1a44dff1fc313948b2ee98">visit</reimplements>
        <param>
          <type>const <ref refid="classVisitNode" kindref="compound">VisitNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="13" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classSourceASTVisitor_1aa14185df181015fa5f391cd1230522bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const ClickNode &amp;node) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1a4678beb531d981819910135b8858a53e">visit</reimplements>
        <param>
          <type>const <ref refid="classClickNode" kindref="compound">ClickNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="14" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="14" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classSourceASTVisitor_1a9362419e802579a9cc1bc2f14f121aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const TypeNode &amp;node) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1aeccf96f0ab398a61232dc446cc531904">visit</reimplements>
        <param>
          <type>const <ref refid="classTypeNode" kindref="compound">TypeNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="15" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classSourceASTVisitor_1a5c3561129eaa03deca60c1e41a947936" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const CheckNode &amp;node) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1a47627f9820fb4988190dc1a82bd01a97">visit</reimplements>
        <param>
          <type>const <ref refid="classCheckNode" kindref="compound">CheckNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="16" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classSourceASTVisitor_1aad3c1f4cf1e2695585ec343256c388e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const TestNode &amp;node) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1adc2d6fe7bad666275db5ecfdaeb5cadb">visit</reimplements>
        <param>
          <type>const <ref refid="classTestNode" kindref="compound">TestNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="17" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="36" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classSourceASTVisitor_1a78f3df5bd5ad24fb8c7ac1c827d0ed2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SourceASTVisitor::visit</definition>
        <argsstring>(const AST &amp;tree) override</argsstring>
        <name>visit</name>
        <qualifiedname>SourceASTVisitor::visit</qualifiedname>
        <reimplements refid="classASTVisitor_1a2471f6e7e3c790f92af037d51fa2accb">visit</reimplements>
        <param>
          <type>const <ref refid="classAST" kindref="compound">AST</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ast/SourceASTVisitor.h" line="18" column="12" bodyfile="src/ast/SourceASTVisitor.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ASTVisitor</label>
        <link refid="classASTVisitor"/>
      </node>
      <node id="1">
        <label>SourceASTVisitor</label>
        <link refid="classSourceASTVisitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ASTVisitor</label>
        <link refid="classASTVisitor"/>
      </node>
      <node id="1">
        <label>SourceASTVisitor</label>
        <link refid="classSourceASTVisitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/ast/SourceASTVisitor.h" line="11" column="1" bodyfile="src/ast/SourceASTVisitor.h" bodystart="11" bodyend="19"/>
    <listofallmembers>
      <member refid="classSourceASTVisitor_1aff40d6bbbc9e7b44b927e031f94a1a6d" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
      <member refid="classSourceASTVisitor_1aa14185df181015fa5f391cd1230522bc" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
      <member refid="classSourceASTVisitor_1a9362419e802579a9cc1bc2f14f121aee" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
      <member refid="classSourceASTVisitor_1a5c3561129eaa03deca60c1e41a947936" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
      <member refid="classSourceASTVisitor_1aad3c1f4cf1e2695585ec343256c388e5" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
      <member refid="classSourceASTVisitor_1a78f3df5bd5ad24fb8c7ac1c827d0ed2a" prot="public" virt="virtual"><scope>SourceASTVisitor</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
